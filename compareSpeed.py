d = range(100,8801,300)
print d
gpu1 = [62.557338,77.880104,92.273368,107.127165,122.44752,137.516463,
153.016086,166.948599,181.701158,197.32079,213.06531,228.824584,
244.340372,255.296727,270.392347,286.205478,302.893572,319.141973,
334.806895,343.833799,359.19,375.895373,391.823644,409.155929,
416.765254,431.653958,446.840534,465.65477,482.726417,489.837487]

gpu2 = [62.548009,77.935883,92.253473,107.235669,122.424332,137.420089,
151.837645,166.567476,182.226089,197.605074,213.174543,228.820865,
240.978353,255.360662,270.933876,286.602815,303.088441,314.09457,
329.650001,345.698687,361.450287,377.610225,387.597327,402.594045,
419.169019,435.667842,453.044142,469.307091,476.393527,492.697318]

cpu1 = [72.262017,79.664506,94.633525,110.106936,124.726855,140.513527,
155.534605,170.64698,186.029514,200.468931,215.397195,230.415673,
244.753959,261.969402,276.598768,291.691743,306.477389,322.875266,
337.018835,352.048708,367.737464,383.28825,398.851281,412.58185,
429.798155,445.713099,458.450497,474.021344,488.195676,505.539589]

cpu2 = [72.283402,79.383673,94.508426,109.77545,124.236846,139.983936,
154.869723,170.873919,185.97845,200.343962,214.761593,230.783774,
244.900641,261.521379,275.851006,290.921375,307.632366,320.437566,
336.18004,350.523836,366.672403,385.427879,397.763499,413.073707,
426.013213,442.799424,457.845643,471.632174,487.091241,505.039009]

cpuavg= [(cpu1[i]+cpu2[i])/2.0 for i in range(len(d))]
gpuavg= [(gpu1[i]+gpu2[i])/2.0 for i in range(len(d))]

import pylab
import numpy as np

xp = np.linspace(100, 8800, 100)

z = np.polyfit(d,cpuavg,1)
p = np.poly1d(z)
pylab.plot(xp,p(xp),'b-',label="CPU y="+str(z[1])[:5]+"x")
pylab.plot(d,cpu1,'xb')
pylab.plot(d,cpu2,'xb')

z = np.polyfit(d,gpuavg,1)
pylab.plot(d,gpu1,'gx')
pylab.plot(d,gpu2,'gx')
p = np.poly1d(z)
pylab.plot(xp,p(xp),'g-',label="GPU y="+str(z[1])[:5]+"x")


avg = sum([x[0]/x[1] for x in zip(gpuavg,cpuavg)] )/float(len(d))


pylab.title("Theano GPU vs CPU\n"+str(1-avg)[:5]+"x speedup")
pylab.legend(loc="upper left");
pylab.ylabel("time(s)")
pylab.xlabel("vectors")
pylab.show()
